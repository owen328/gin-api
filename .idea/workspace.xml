<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="24a95145-ec54-4f7b-9402-b1fe03097f4d" name="变更" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="false" />
  </component>
  <component name="GOROOT" url="file://C:/Program Files/Go" />
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="false" />
  </component>
  <component name="ProjectId" id="2BSX6hVctLKo7Pg0GoisfczQblb" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "D:/project/go_learn",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "settings.editor.selected.configurable": "preferences.editor"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "mysql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\project\go_learn" />
      <recent name="D:\project\go_learn\tcp\client" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\project\go_learn" />
      <recent name="D:\project\go_learn\routers" />
      <recent name="D:\project\go_learn\context\client" />
      <recent name="D:\project\go_learn\context\server" />
      <recent name="D:\project\go_learn\socket_learn\tcp" />
    </key>
  </component>
  <component name="RunManager" selected="Go 构建.go build go_learn">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go_learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go_learn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build Admin.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="go_learn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/app/model/Admin.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build User.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="go_learn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/app/model/User.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build go_learn" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go_learn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="go_learn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build routers.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="go_learn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/routers/routers.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="go_learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="go_learn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go 构建.go build Admin.go" />
      <item itemvalue="Go 构建.go build User.go" />
      <item itemvalue="Go 构建.go build main.go" />
      <item itemvalue="Go 构建.go build routers.go" />
      <item itemvalue="Go 构建.go build go_learn" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build go_learn" />
        <item itemvalue="Go 构建.go build User.go" />
        <item itemvalue="Go 构建.go build Admin.go" />
        <item itemvalue="Go 构建.go build main.go" />
        <item itemvalue="Go 构建.go build routers.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/go_learn$go_learn_split__TestSplit.out" NAME="go_learn/split 中的 TestSplit 覆盖结果" MODIFIED="1674984371154" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>